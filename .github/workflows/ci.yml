name: CI
on: push
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Install modules
#       run: yarn
#     - name: Run ESLint
#       run: eslint . --ext .js,.jsx,.ts,.tsx

# This action works with pull requests and pushes

jobs:
  prettier:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Make sure the actual branch is checked out when running on pull requests
        ref: ${{ github.head_ref }}

    - name: Prettify code
      uses: creyD/prettier_action@v4.1
      with:
        # This part is also where you can pass other options, for example:
        prettier_options: --write **/*.{js,md}
# name: CI

# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]
# jobs:
#   # install dependencies
#   setup:
#     name: setup
#     runs-on: ubuntu-latest

#     steps:
#         - uses: actions/checkout@v2
#         - name: Use Node.js
#           uses: actions/setup-node@v1
#           with:
#             node-version: '12.x'
#         # cache node_modules
#         # spped up the procedure of installing packages
#         - uses: actions/cache@v2
#           with:
#             path: '**/node_modules'
#             key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

#         - name: install packages
#           run: yarn
          
#   # static code check
#   # eslint and prettier
#   static-check:
#     name: static check
#     runs-on: ubuntu-latest
#     needs: [setup]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Use Node.js
#         uses: actions/setup-node@v1
#         with:
#           node-version: '12.x'
#       - uses: actions/cache@v2
#         with:
#           path: '**/node_modules'
#           key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
#       - name: eslint
#         run: node -v && yarn eslint
#       - name: prettier
#         run: yarn prettier

  # # run unit test
  # unit-test:
  #   name: unit test
  #   runs-on: ubuntu-latest
  #   needs: [setup, static-check]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'
  #     - uses: actions/cache@v2
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
  #     - name: unit-test
  #       run: node -v && yarn test
